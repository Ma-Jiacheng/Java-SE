向上转型：
    public class 动物(){
        eat();  //抽象方法
    }

    public class 猫 extends 动物(){
        eat(){
            吃鱼;
        }
    }
对象的向上转型，其实就是多态写法：
    父类名称 对象名 = new 子类名称();
    Animal animal = new Cat();
含义：右侧创建一个子类对象，把它当作父类来看待使用
注意事项：
    1.向上转型一定是安全的，从小范围向上转型为大范围
    2.对象一旦向上转型为父类，就无法调用子类原本拥有的特有方法

向下转型：对象的向下转型，其实是一个还原的动作
    子类名称 对象名 = (子类名称) 父类对象;
    Cat cat = (Cat) animal;
含义：将父类对象，还原成为本来的子类对象
注意事项：
    1.必须保证对象本来创建的时候是什么，还原后还是什么
    2.如果对象创建的时候是A，还原时还原为B，就会报错
