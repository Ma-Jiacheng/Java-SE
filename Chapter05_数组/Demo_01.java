package Chapter05_数组;

//数组的概念

/*
数组的概念：是一种容器，可以同时存放类型相同的多个数据

数组的特点：
    1.数组是一种引用数据类型
    2.数组当中的多个数据类型必须统一
    3.数组的长度在程序运行期间不可改变

数组的初始化：在内存中创建一个数组，向其中赋予一些默认值
    1.动态初始化：创建时指定数组长度
    2.静态初始化：创建时指定数组内容

动态初始化数组格式：
    数据类型[] 数组名称 = new 数据类型[数组长度]
静态初始化数组格式：
    标准格式：数据类型[] 数组名称 = new 数据类型[] {元素1, 元素2, 元素3, ...}
    省略格式：数据类型[] 数组名称 = {元素1, 元素2, 元素3, ...}

注意事项：
    1.静态初始化数组没有指定长度，但是仍然会自动推算得到长度
    2.数组初始化可以拆分为定义数组和数组赋值
    3.动态初始化数组的时候，其中的元素将会有默认值
        整数型：默认为 0
        浮点型：默认为 0.0
        字符类型：默认为 '\u0000'
        布尔类型：默认为 false
        引用类型：默认为 null

使用建议：若不确定数组具体内容则使用动态，确定内容则使用静态
 */

public class Demo_01 {
    public static void main(String[] args) {
        //以5个学生成绩录入输出为例
        int student01 = 98;     //每个变量只能存储一个数据，对于相同数据类型的多个数据存储太过繁琐
        int student02 = 97;
        int student03 = 93;
        int student04 = 87;
        int student05 = 82;

        //以动态初始化数组形式实现
        int[] score1 = new int[5];

        //以静态初始化数组形式实现
        int[] score2 = new int[]{98, 97, 93, 87, 82};       //标准格式
        int[] score3 = {98, 97, 93, 87, 82};    //省略格式

        //创建一个String类型数组
        String[] arr_s = new String[5];
        //创建一个char类型数组
        char[] arr_c = new char[5];
        //其它数据类型同理
    }
}
